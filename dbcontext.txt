using System;
using System.Data.SQLite;
using System.IO;

namespace Projecte.Persistence
{
    class DbContext
    {
        private const string DBName = "database.sqlite";
        private const string SQLScript = @"..\..\Util\Database.sql";
        private static bool IsDbRecentlyCreated = false;

        public static void Up()
        {
            if (!File.Exists(Path.GetFullPath(DBName)))
            {
                SQLiteConnection.CreateFile(DBName);
                IsDbRecentlyCreated = true;
            }
            using(var ctx = GetInstance())
            {
                var query = "";
                var line = "";
                while ((line= reader.ReadLine)) != null)
                {
                    query += line;
                }
                using (var command = new SQLiteCommand(query, ctx))
                {
                    command.ExecuteNonQuery();  
                }
            }
            
            for (var i = 1; i <= 100; i++)
            {
                var query = "INSERT INTO Users (name, lastname, data) VALUES (?,?,?)";
                
                using (var command = new SQLiteCommand(query, ctx))
                {
                    command.Parameters.Add(new SQLiteParameter("name", "Name" + i));
                    command.Parameters.Add(new SQLiteParameter("lastname", "Lastname" + i));

                    var rnd = new Random();
                    command.Parameters.Add(new SQLiteParameter("data", DateTime.Today.Add));

                    command.ExecuteNonQuery();
                }
            }
        }
    }
}

    public static SQLiteConnection GetInstance()
    {
    var db = new SQLiteConnection(
        string.Format("Data Source = {0}; Version=3;", DBName));

    db.Open();
    return db;
        }
    }
}
